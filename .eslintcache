[{"C:\\EduProject\\webadmin\\src\\components\\UserTable\\index.jsx":"1","C:\\EduProject\\webadmin\\src\\index.js":"2","C:\\EduProject\\webadmin\\src\\components\\Login\\index.jsx":"3","C:\\EduProject\\webadmin\\src\\components\\NotFound\\index.jsx":"4","C:\\EduProject\\webadmin\\src\\pages\\Admin\\index.jsx":"5","C:\\EduProject\\webadmin\\src\\components\\Home\\index.jsx":"6","C:\\EduProject\\webadmin\\src\\components\\ClassTable\\index.jsx":"7","C:\\EduProject\\webadmin\\src\\components\\TeacherTable\\index.jsx":"8","C:\\EduProject\\webadmin\\src\\components\\StudentTable\\index.jsx":"9","C:\\EduProject\\webadmin\\src\\host.js":"10","C:\\EduProject\\webadmin\\src\\App.js":"11","C:\\EduProject\\webadmin\\src\\reportWebVitals.js":"12","C:\\EduProject\\webadmin\\src\\components\\ScheduleTable\\index.jsx":"13","C:\\EduProject\\webadmin\\src\\components\\StudentTable\\StudentTable.jsx":"14","C:\\EduProject\\webadmin\\src\\components\\TeacherTable\\TeacherTable.jsx":"15","C:\\EduProject\\webadmin\\src\\components\\ClassTable\\ClassTable.jsx":"16","C:\\EduProject\\webadmin\\src\\components\\UserTable\\UserTable.jsx":"17","C:\\EduProject\\webadmin\\src\\components\\ScheduleTable\\ScheduleTable.jsx":"18","C:\\EduProject\\webadmin\\src\\components\\StationTable\\StationTable.jsx":"19","C:\\EduProject\\webadmin\\src\\components\\AbsenceTable\\AbsenceTable.jsx":"20","C:\\EduProject\\webadmin\\src\\components\\BusTable\\BusTable.jsx":"21","C:\\EduProject\\webadmin\\src\\components\\BusTable\\index.jsx":"22","C:\\EduProject\\webadmin\\src\\components\\NoAttendanceTable\\index.jsx":"23","C:\\EduProject\\webadmin\\src\\components\\NoAttendanceTable\\NoAttendance.jsx":"24","C:\\EduProject\\webadmin\\src\\components\\AbsenceTable\\index.jsx":"25","C:\\EduProject\\webadmin\\src\\components\\StationTable\\index.jsx":"26","C:\\EduProject\\webadmin\\src\\components\\Chart\\Chart.jsx":"27","C:\\EduProject\\webadmin\\src\\components\\Statistics\\index.jsx":"28","C:\\EduProject\\webadmin\\src\\components\\Statistics\\Statistics.jsx":"29","C:\\EduProject\\webadmin\\src\\components\\Chart\\index.jsx":"30"},{"size":232,"mtime":1619068696868,"results":"31","hashOfConfig":"32"},{"size":547,"mtime":1612156468185,"results":"33","hashOfConfig":"32"},{"size":1648,"mtime":1612158317379,"results":"34","hashOfConfig":"32"},{"size":233,"mtime":1619068702344,"results":"35","hashOfConfig":"32"},{"size":8447,"mtime":1619363926600,"results":"36","hashOfConfig":"32"},{"size":5014,"mtime":1619415656966,"results":"37","hashOfConfig":"32"},{"size":239,"mtime":1619068661757,"results":"38","hashOfConfig":"32"},{"size":241,"mtime":1619068693868,"results":"39","hashOfConfig":"32"},{"size":241,"mtime":1619068694643,"results":"40","hashOfConfig":"32"},{"size":62,"mtime":1612277462373,"results":"41","hashOfConfig":"32"},{"size":762,"mtime":1612026164960,"results":"42","hashOfConfig":"32"},{"size":362,"mtime":1611544040223,"results":"43","hashOfConfig":"32"},{"size":244,"mtime":1619068651423,"results":"44","hashOfConfig":"32"},{"size":8803,"mtime":1619016630085,"results":"45","hashOfConfig":"32"},{"size":6578,"mtime":1619016758018,"results":"46","hashOfConfig":"32"},{"size":4724,"mtime":1619017199563,"results":"47","hashOfConfig":"32"},{"size":7822,"mtime":1619017337936,"results":"48","hashOfConfig":"32"},{"size":13895,"mtime":1619026357340,"results":"49","hashOfConfig":"32"},{"size":4755,"mtime":1619086247042,"results":"50","hashOfConfig":"32"},{"size":6641,"mtime":1619155008678,"results":"51","hashOfConfig":"32"},{"size":5386,"mtime":1619078158997,"results":"52","hashOfConfig":"32"},{"size":229,"mtime":1619069232380,"results":"53","hashOfConfig":"32"},{"size":241,"mtime":1619107004245,"results":"54","hashOfConfig":"32"},{"size":6225,"mtime":1619154996529,"results":"55","hashOfConfig":"32"},{"size":241,"mtime":1619069261797,"results":"56","hashOfConfig":"32"},{"size":241,"mtime":1619068899315,"results":"57","hashOfConfig":"32"},{"size":12899,"mtime":1619457306772,"results":"58","hashOfConfig":"32"},{"size":235,"mtime":1619364912441,"results":"59","hashOfConfig":"32"},{"size":5407,"mtime":1619425997207,"results":"60","hashOfConfig":"32"},{"size":220,"mtime":1619363821335,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187e2d1",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\EduProject\\webadmin\\src\\components\\UserTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\index.js",[],["140","141"],"C:\\EduProject\\webadmin\\src\\components\\Login\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\NotFound\\index.jsx",["142"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NotFound = props => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h1>NOT FOUND</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;",["143","144"],"C:\\EduProject\\webadmin\\src\\pages\\Admin\\index.jsx",["145","146","147","148"],"C:\\EduProject\\webadmin\\src\\components\\Home\\index.jsx",["149","150","151","152","153","154","155","156"],"import React from 'react';\r\nimport './home.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst HomeScreen = props => {\r\n    const [studentTotal, setStudentTotal] = React.useState(0)\r\n    const [teacherTotal, setTeacherTotal] = React.useState(0)\r\n    const [noAttendanceTotal, setNoAttendanceTotal] = React.useState(0)\r\n    const [absenceTotal, setAbsenceTotal] = React.useState(0)\r\n\r\n    const getData = async () => {\r\n        const isStudent = await axios.get(`${host}/student`)\r\n        setStudentTotal(isStudent.data.length);\r\n        const isTeacher = await axios.get(`${host}/teacher`)\r\n        setTeacherTotal(isTeacher.data.length);\r\n\r\n        const today = new Date().getDate()+'-'+new Date().getMonth()\r\n        const isNoAttendance = await axios.get(`${host}/noattendance/getData`)\r\n        const todayAbsence = await isNoAttendance.data.filter((item) => {\r\n            const getDate = (new Date(item.date)).getDate()+'-'+(new Date(item.date)).getMonth()\r\n            if(today == getDate) {\r\n                return item\r\n            }\r\n        })\r\n        var qtyNoAttendance = 0;\r\n        todayAbsence.map((item) => {\r\n            qtyNoAttendance += item.studentList.length\r\n        })\r\n        setNoAttendanceTotal(qtyNoAttendance)\r\n    }\r\n\r\n    const getAbsenceData = async () => {\r\n        const today = new Date().getDate()+'-'+new Date().getMonth()\r\n        const isAbsence = await axios.get(`${host}/absence/getData`)\r\n        var qty = 0;\r\n        isAbsence.data.map( (item) => {\r\n            const data = item.dates.filter((item2) => {\r\n                const getDate = (new Date(item2.date)).getDate()+'-'+(new Date(item2.date)).getMonth()\r\n                if(getDate === today) {\r\n                    return item2\r\n                }\r\n            })\r\n            qty += data.length\r\n        })\r\n        setAbsenceTotal(qty)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getData()\r\n        getAbsenceData()\r\n    },[])\r\n    return (\r\n        <div className=\"nav-menu\">\r\n            \r\n            <div className=\"nav-func-area\">\r\n                <div className=\"nav-func\" id=\"nav-1\">\r\n                    <div className=\"nav-func-left\">\r\n                        <h2>Tổng số học sinh</h2>\r\n                        <h3>{ studentTotal }</h3>\r\n                    </div>\r\n                    <div className=\"nav-func-right\">\r\n                        <Link to=\"/home/students\">\r\n                            <div className=\"btn-nav\">\r\n                                <KeyboardArrowDownIcon style={{\"font-size\": 40 }} />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"nav-func-area\">\r\n                <div className=\"nav-func\" id=\"nav-2\">\r\n                    <div className=\"nav-func-left\">\r\n                        <h2>Tổng số giáo viên</h2>\r\n                        <h3>{ teacherTotal }</h3>\r\n                    </div>\r\n                    <div className=\"nav-func-right\">\r\n                        <Link to=\"/home/teachers\">\r\n                            <div className=\"btn-nav\">\r\n                                <KeyboardArrowDownIcon style={{\"font-size\": 40 }} />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"nav-func-area\">\r\n                <div className=\"nav-func\" id=\"nav-3\">\r\n                    <div className=\"nav-func-left\">\r\n                        <h2>Vắng không phép hôm nay</h2>\r\n                        <h3>{ noAttendanceTotal }</h3>\r\n                    </div>\r\n                    <div className=\"nav-func-right\">\r\n                        <Link to=\"/home/noattendance\">\r\n                            <div className=\"btn-nav\">\r\n                                <KeyboardArrowDownIcon style={{\"font-size\": 40 }} />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"nav-func-area\">\r\n                <div className=\"nav-func\" id=\"nav-4\">\r\n                    <div className=\"nav-func-left\">\r\n                        <h2>Vắng có phép hôm nay</h2>\r\n                        <h3>{absenceTotal}</h3>\r\n                    </div>\r\n                    <div className=\"nav-func-right\">\r\n                        <Link to=\"/home/absence\">\r\n                            <div className=\"btn-nav\">\r\n                                <KeyboardArrowDownIcon style={{\"font-size\": 40 }} />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;",["157","158"],"C:\\EduProject\\webadmin\\src\\components\\ClassTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\TeacherTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\StudentTable\\index.jsx",[],["159","160"],"C:\\EduProject\\webadmin\\src\\host.js",[],"C:\\EduProject\\webadmin\\src\\App.js",["161","162"],"import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport LoginScreen from './components/Login';\nimport NotFoundScreen from './components/NotFound'\nimport HomeScreen from './pages/Admin'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Suspense fallback={<div>Loadding ...</div>}>\n        <Router>\n            <Switch>\n              {/* <Redirect exact from=\"/\" to=\"/photos\" /> */}\n              <Route exact path=\"/\" component={LoginScreen} />\n              <Route path=\"/home\" component={HomeScreen} />\n              <Route component={NotFoundScreen} />\n            </Switch>\n          </Router>\n       </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\EduProject\\webadmin\\src\\reportWebVitals.js",[],"C:\\EduProject\\webadmin\\src\\components\\ScheduleTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\StudentTable\\StudentTable.jsx",["163","164","165"],"import React, { useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState } = React;\r\n  \r\n    const [columns, setColumns] = useState([\r\n        { title: 'Tên', field: 'name' },\r\n        { title: 'Sinh ngày', field: 'birthday' },\r\n        { title: 'Giới tính', field: 'gender' },\r\n        { title: 'Mã lớp', field: 'classCode' },\r\n        { title: 'GVCN', field: 'teacherCode'},\r\n        { title: 'Năm nhập học', field: 'joined'},\r\n    ]);\r\n  \r\n    const [data, setData] = useState([]);\r\n    \r\n    const getData = async () => {\r\n      \r\n      const isStudents = await axios.get(`${host}/student`)\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      const isTeachers =  await axios.get(`${host}/teacher`)\r\n      const isParents =  await axios.get(`${host}/users`)\r\n\r\n      const dataArray = [];\r\n      isStudents.data.map(dt => {\r\n        let classIndex = -1;\r\n        let teacherIndex = -1;\r\n        let parentsIndex = -1;\r\n\r\n        for(let i in isClasses.data) {\r\n          if(isClasses.data[i]._id === dt.classCode) {\r\n            classIndex = i;\r\n          }\r\n        }\r\n\r\n        for(let i in isTeachers.data) {\r\n          if(isTeachers.data[i]._id === dt.teacherCode) {\r\n            teacherIndex = i;\r\n          }\r\n        }\r\n\r\n        for(let i in isParents.data) {\r\n          if(isParents.data[i]._id === dt.parentsCode) {\r\n            parentsIndex = i;\r\n          }\r\n        }\r\n\r\n        const infoData = {\r\n          id: dt._id,\r\n          name: dt.name,\r\n          birthday: dt.birthday,\r\n          gender: dt.gender,\r\n          classCode: Number(classIndex),\r\n          teacherCode: Number(teacherIndex),\r\n          parentsCode: Number(parentsIndex),\r\n          joined: dt.joined\r\n        }\r\n        dataArray.push(infoData)\r\n      })\r\n      setData(dataArray)\r\n    }\r\n\r\n    const setItinialColumns = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      const isTeachers =  await axios.get(`${host}/teacher`)\r\n      const isParents = await axios.get(`${host}/users`)\r\n\r\n      setColumns([\r\n        { title: 'Tên', field: 'name' },\r\n        { title: 'Sinh ngày', field: 'birthday' },\r\n        { title: 'Giới tính', field: 'gender', \r\n          lookup: {\r\n            Male: 'Nam',\r\n            Female: 'Nữ'\r\n          }\r\n        },\r\n        { title: 'Mã lớp', field: 'classCode', \r\n          lookup: isClasses.data.map((e, i) => (\r\n            e.ClassCode\r\n          ))\r\n        },\r\n        { title: 'GVCN', field: 'teacherCode',\r\n          lookup: isTeachers.data.map((e, i) => (\r\n            e.FullName\r\n          ))\r\n        },\r\n        {\r\n          title: 'Tên Phụ huynh', field: 'parentsCode',\r\n            lookup: isParents.data.map((e, i) => (\r\n              e.myFullName\r\n            ))\r\n        },\r\n        { title: 'Năm nhập học', field: 'joined',\r\n          lookup: {\r\n            2018: 2018,\r\n            2019: 2019,\r\n            2020: 2020,\r\n            2021: 2021,\r\n            2022: 2022,\r\n            2023: 2023\r\n          }\r\n        },\r\n      ])\r\n    }\r\n    useEffect(async () => {\r\n        await getData(); \r\n        setItinialColumns();   \r\n    }, [])\r\n\r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Students Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(async() => {\r\n              setData([...data, newData]);\r\n                // console.log(newData); \r\n                const isClasses = await axios.get(`${host}/class`)\r\n                const isTeachers =  await axios.get(`${host}/teacher`)  \r\n                const isParents =  await axios.get(`${host}/users`) \r\n                const student = {\r\n                    name: newData.name,\r\n                    birthday: newData.birthday,\r\n                    gender: newData.gender,\r\n                    classCode: isClasses.data[Number(newData.classCode)]._id,\r\n                    teacherCode: isTeachers.data[Number(newData.teacherCode)]._id,\r\n                    parentsCode : isParents.data[Number(newData.parentsCode)]._id,\r\n                    joined: newData.joined,\r\n                  }\r\n                  // console.log(student);\r\n                  axios.post(`${host}/student/create`, student)\r\n                    .then((res) => {\r\n                       console.log('successly Student Addition!');\r\n                  })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(async() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                const isClasses = await axios.get(`${host}/class`)\r\n                const isTeachers =  await axios.get(`${host}/teacher`)  \r\n                const isParents =  await axios.get(`${host}/users`) \r\n                const student = {\r\n                    id: newData.id,\r\n                    name: newData.name,\r\n                    birthday: newData.birthday,\r\n                    gender: newData.gender,\r\n                    classCode: isClasses.data[Number(newData.classCode)]._id,\r\n                    teacherCode: isTeachers.data[Number(newData.teacherCode)]._id,\r\n                    parentsCode : isParents.data[Number(newData.parentsCode)]._id,\r\n                    joined: newData.joined,\r\n                  }\r\n                axios.post(`${host}/student/edit`, student)\r\n                  .then(resEdit => {\r\n                    console.log(resEdit.data);\r\n                })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                  axios.post(`${host}/student/delete`, {id: id})\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                  })     \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;","C:\\EduProject\\webadmin\\src\\components\\TeacherTable\\TeacherTable.jsx",["166","167"],"import React, { useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState } = React;\r\n  \r\n    const [columns, setColumns] = useState([]);\r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    const getData = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      await axios.get(`${host}/teacher`)\r\n      .then(res => {\r\n          let DATA = [];\r\n          res.data.map(dt => {\r\n            let classIndex = -1;\r\n            for(let i in isClasses.data) {\r\n              if(dt.ClassCode === isClasses.data[i]._id) {\r\n                classIndex = i;\r\n              }\r\n            }\r\n            const infoData = {\r\n                id: dt._id,\r\n                userName: dt.userName,\r\n                password: '********',\r\n                name: dt.FullName,\r\n                email: dt.Email,\r\n                numberPhone: dt.NumberPhone,\r\n                Gender: dt.Gender,\r\n                birthDay: dt.BirthDay,\r\n                identification: dt.Identification,\r\n                hometown: dt.HomeTown,\r\n                worked: dt.Worked,\r\n                permission: dt.permission,\r\n                classCode: classIndex\r\n            }\r\n              DATA.push(infoData)\r\n          })\r\n          // console.log(DATA);\r\n          setData(DATA);\r\n      })\r\n    }\r\n\r\n    const getColumn = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      setColumns([\r\n        { title: 'Tên Đăng Nhập', field: 'userName' },\r\n        { title: 'Mật khẩu', field: 'password' },\r\n        { title: 'Tên', field: 'name' },\r\n        { title: 'Email', field: 'email' },\r\n        { title: 'SĐT', field: 'numberPhone'},\r\n        { title: 'Giới tính', field: 'Gender',\r\n          lookup: {\r\n            Male: 'Nam',\r\n            Female: 'Nữ'\r\n          }\r\n        },\r\n        { title: 'Sinh ngày', field: 'birthDay' },\r\n        { title: 'CMND', field: 'identification' },\r\n        { title: 'Quê Quán', field: 'hometown' },\r\n        { title: 'Năm Nhận Việc', field: 'worked' },\r\n        { title: 'Chức vụ', field: 'permission',\r\n          lookup: {\r\n            teacher: 'Giáo viên',\r\n            supervisor: 'Người đưa đón'\r\n          }\r\n        },\r\n        { title: 'Lớp', field: 'classCode',\r\n          lookup: isClasses.data.map(dt => (\r\n            dt.ClassCode\r\n        ))\r\n        }\r\n      ])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();   \r\n        getColumn(); \r\n    }, [])\r\n\r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Teachers Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                    axios.post(`${host}/teacher/create`, newData)\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                    })    \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                  axios.post(`${host}/teacher/edit`, newData)\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                  })    \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                  axios.post(`${host}/teacher/delete`, {id: id})\r\n                  .then(res => {\r\n                      console.log(res.data);\r\n                  })    \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;","C:\\EduProject\\webadmin\\src\\components\\ClassTable\\ClassTable.jsx",["168"],"import React from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState, useEffect } = React;\r\n    const [data, setData] = useState([]);\r\n\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    const getData = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      \r\n      setData(isClasses.data)\r\n    }\r\n\r\n    const getDataTeacher = async () => {\r\n      setColumns([\r\n        { title: 'Lớp', field: 'ClassCode' },\r\n        { title: 'Phòng', field: 'Room' },\r\n      ])\r\n    }\r\n   \r\n  \r\n    useEffect( async () => {\r\n      await getData();\r\n      await getDataTeacher(); \r\n    }, [])  \r\n    \r\n   \r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Classes Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                  axios.post(`${host}/class/create`, newData)\r\n                  .then((resCreate) => {\r\n                    console.log(resCreate.data);\r\n                  })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                axios.post(`${host}/class/edit`, newData)\r\n                .then((resCreate) => {\r\n                  console.log(resCreate.data);\r\n                })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                    axios.post(`${host}/class/delete`, {id: id})\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                    })    \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;",["169","170"],"C:\\EduProject\\webadmin\\src\\components\\UserTable\\UserTable.jsx",["171","172","173","174","175","176","177","178"],"import React from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n// import CreateUserModals from '../CreateUserModals';\r\n// import EditUserModals from '../EditUserModals';\r\nimport axios from 'axios'\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function UserTable() {\r\n    const { useState, useEffect } = React;\r\n\r\n    const [columns, setColumns] = useState([\r\n      { title: 'Tên đăng nhập', field: 'userName' },\r\n      { title: 'Password', field: 'password'},\r\n      { title: 'Email', field: 'email' },\r\n      { title: 'Họ và tên', field: 'myFullName' },\r\n      { title: 'Giới tính', field: 'gender', \r\n        lookup: {\r\n          Male: 'Nam',\r\n          Female: 'Nữ'\r\n        }\r\n      },\r\n      { title: 'Sinh năm', field: 'birthDay' },\r\n      { title: 'Mối quan hệ', field: 'relationship' },\r\n      { title: 'SĐT', field: 'numberPhone' },\r\n      { title: 'Địa chỉ', field: 'address' },\r\n    ]);\r\n  \r\n    const [data, setData] = useState([]);\r\n    const [dataClass, setDataClass] = useState([]);\r\n\r\n    useEffect(async () => {\r\n      await getData();\r\n      // await getClass();\r\n      // await getStudent();\r\n\r\n    },[])\r\n\r\n    const getData = async () => {\r\n      const isUsers = await axios.get(`${host}/users`)\r\n      const isStudents = await axios.get(`${host}/student`)\r\n      var data = [];\r\n      isUsers.data.map(e => {\r\n        let index = -1;\r\n        for(let i in isStudents.data) {\r\n          if(isStudents.data[i]._id === e.student) {\r\n            index = i;\r\n          }\r\n        }\r\n        data.push({\r\n            id: e._id,\r\n            userName: e.userName,\r\n            password: '***********',\r\n            email: e.email,\r\n            myFullName: e.myFullName,\r\n            numberPhone: e.numberPhone,\r\n            birthDay: e.birthDay,\r\n            relationship: e.relationship,\r\n            gender: e.gender,\r\n            address: e.address,\r\n            student: index,\r\n          })\r\n        })\r\n        setData(data);\r\n      }\r\n    return (\r\n      <MaterialTable\r\n      icons={tableIcons}\r\n      title=\"Parents Management\"\r\n      columns={columns}\r\n      data={data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              axios.get(`${host}/student`)\r\n              .then(res => {\r\n                const index = newData.student\r\n                const parents = {\r\n                  userName: newData.userName,\r\n                  password: newData.password,\r\n                  email: newData.email,\r\n                  myFullName: newData.myFullName,\r\n                  numberPhone: newData.numberPhone,\r\n                  address: newData.address,\r\n                  birthDay: newData.birthDay,\r\n                  relationship: newData.relationship,\r\n                  gender: newData.gender\r\n                }\r\n                axios.post(`${host}/users/create`, parents)\r\n                .then((resCreate) => {\r\n                  console.log(resCreate.data);\r\n                })\r\n              })\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n              axios.get(`${host}/student`)\r\n              .then(res => {\r\n                const index = newData.student\r\n                if(newData.password.indexOf(\"*\") !== -1) {\r\n                  var parents = {\r\n                    id: newData.id,\r\n                    userName: newData.userName,\r\n                    // password: newData.password,\r\n                    email: newData.email,\r\n                    myFullName: newData.myFullName,\r\n                    numberPhone: newData.numberPhone,\r\n                    address: newData.address,\r\n                    birthDay: newData.birthDay,\r\n                    relationship: newData.relationship,\r\n                    gender: newData.gender\r\n                  }\r\n                } else {\r\n                  var parents = {\r\n                    id: newData.id,\r\n                    userName: newData.userName,\r\n                    password: newData.password,\r\n                    email: newData.email,\r\n                    myFullName: newData.myFullName,\r\n                    numberPhone: newData.numberPhone,\r\n                    address: newData.address,\r\n                    birthDay: newData.birthDay,\r\n                    relationship: newData.relationship,\r\n                    gender: newData.gender\r\n                  }\r\n                }  \r\n                axios.post(`${host}/users/edit`, parents)\r\n                .then(resEdit => {\r\n                  // console.log(resEdit.data);\r\n                })\r\n              })  \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n                const id = oldData.id\r\n                axios.post(`${host}/users/delete`, {id: id})\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                })     \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\n  \r\nexport default UserTable;","C:\\EduProject\\webadmin\\src\\components\\ScheduleTable\\ScheduleTable.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\StationTable\\StationTable.jsx",["179"],"import React from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState, useEffect } = React;\r\n    const [data, setData] = useState([]);\r\n\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    const getData = async () => {\r\n      const isStation = await axios.get(`${host}/station/show`)\r\n      const stationData = isStation.data.map(item => {\r\n        return {\r\n          id: item._id,\r\n          name: item.name,\r\n          address: item.address,\r\n          lat: item.gps.latitude,\r\n          lng: item.gps.longitude\r\n        }\r\n      })\r\n      setData(stationData)\r\n    }\r\n\r\n    const getDataTeacher = async () => {\r\n      setColumns([\r\n        { title: 'Tên điểm đến', field: 'name' },\r\n        { title: 'Địa chỉ', field: 'address' },\r\n        { title: 'Latitude', field: 'lat' },\r\n        { title: 'Longitude', field: 'lng' },\r\n      ])\r\n    }\r\n   \r\n  \r\n    useEffect( async () => {\r\n      await getData();\r\n      await getDataTeacher(); \r\n    }, [])  \r\n    \r\n   \r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Classes Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                  axios.post(`${host}/station/create`, newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                axios.post(`${host}/station/edit`, newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                    axios.post(`${host}/station/remove`, {id: id})\r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;","C:\\EduProject\\webadmin\\src\\components\\AbsenceTable\\AbsenceTable.jsx",["180","181","182"],"C:\\EduProject\\webadmin\\src\\components\\BusTable\\BusTable.jsx",["183","184","185","186"],"import React, { useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState } = React;\r\n  \r\n    const [columns, setColumns] = useState([]);\r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    const getData = async () => {\r\n        const isBus = await axios.get(`${host}/bus/getData`)\r\n        const isTeacher = await axios.get(`${host}/teacher`)\r\n        const teacherData = isTeacher.data.filter(item => {\r\n            return item.permission == \"supervisor\"\r\n        }) \r\n        const busData = isBus.data.map((item) => {\r\n            var i = 0;\r\n            teacherData.map((item2, index) => {\r\n                if(item2._id === item.supervisor) {\r\n                    i = index\r\n                }\r\n            }) \r\n            return {\r\n                id: item._id,\r\n                licensePlates: item.licensePlate,\r\n                supervisor: i\r\n            }\r\n        })\r\n        setData(busData)\r\n    }\r\n\r\n    const getColumn = async () => {\r\n      const isTeacher = await axios.get(`${host}/teacher`)\r\n      const teacherData = isTeacher.data.filter(item => {\r\n        return item.permission == \"supervisor\"\r\n      }) \r\n\r\n      setColumns([\r\n        { title: 'Biển số xe', field: 'licensePlates' },\r\n        { title: 'Giáo viên đưa đón', field: 'supervisor',\r\n            lookup: teacherData.map(item => (\r\n                item.FullName\r\n            ))\r\n        },\r\n      ])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();   \r\n        getColumn(); \r\n    }, [])\r\n\r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Teachers Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                    axios.post(`${host}/bus/create`, newData) \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                  axios.post(`${host}/bus/edit`, newData)    \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                  axios.post(`${host}/bus/remove`, {id: id})\r\n                  .then(res => {\r\n                      console.log(res.data);\r\n                  })    \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;",["187","188"],"C:\\EduProject\\webadmin\\src\\components\\BusTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\NoAttendanceTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\NoAttendanceTable\\NoAttendance.jsx",["189","190","191","192"],"import React, { useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host' \r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState } = React;\r\n  \r\n    const [columns, setColumns] = useState([]);\r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    const getData = async () => {\r\n      var dataBox = [];\r\n      const isAbsence = await axios.get(`${host}/noattendance/getData`)\r\n      isAbsence.data.map((item) => {\r\n        item.studentList.map(async (item2) => {\r\n          const isClass = await axios.post(`${host}/class/getClassById`, {id: item2.data.classCode})\r\n          dataBox.push({\r\n            name: item2.data.name,\r\n            gender: item2.data.gender == \"Male\" ? \"Nam\" : \"Nữ\",\r\n            class: isClass.data[0].ClassCode,\r\n            absencedDate: item.date,\r\n            reason: item2.reason\r\n          })\r\n        })\r\n      })\r\n      const timer = setTimeout(() => {\r\n        setData(dataBox)\r\n        clearTimeout(timer)\r\n      },500)\r\n    }\r\n\r\n    const getColumn = async () => { \r\n      setColumns([\r\n        { title: 'Tên học sinh', field: 'name' },\r\n        { title: 'Giới tính', field: 'gender' },\r\n        { title: 'Lớp', field: 'class' },\r\n        { title: 'Ngày vắng', field: 'absencedDate', render: rowData => {\r\n          const today = new Date().getDate()+'-'+new Date().getMonth()\r\n          const getDate = (new Date(rowData.absencedDate)).getDate()+'-'+(new Date(rowData.absencedDate)).getMonth()\r\n          if(today == getDate) {\r\n            return (new Date(rowData.absencedDate)).getDate()+'-'+((new Date(rowData.absencedDate)).getMonth()+1)+'-'+((new Date(rowData.absencedDate)).getFullYear())+' (Hôm nay)'\r\n          } else {\r\n            return (new Date(rowData.absencedDate)).getDate()+'-'+((new Date(rowData.absencedDate)).getMonth()+1)+'-'+((new Date(rowData.absencedDate)).getFullYear())\r\n          }\r\n        } },\r\n        { title: 'Lý do vắng', field: 'reason' },\r\n      ])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();   \r\n        getColumn(); \r\n    }, [])\r\n\r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Vắng không phép\"\r\n        columns={columns}\r\n        data={data}\r\n        // editable={{\r\n        //   onRowAdd: newData =>\r\n        //     new Promise((resolve, reject) => {\r\n        //       setTimeout(() => {\r\n        //         setData([...data, newData]);\r\n        //             axios.post(`${host}/teacher/create`, newData)\r\n        //             .then(res => {\r\n        //                 console.log(res.data);\r\n        //             })    \r\n        //         resolve();\r\n        //       }, 1000)\r\n        //     }),\r\n        //   onRowUpdate: (newData, oldData) =>\r\n        //     new Promise((resolve, reject) => {\r\n        //       setTimeout(() => {\r\n        //         const dataUpdate = [...data];\r\n        //         const index = oldData.tableData.id;\r\n        //         dataUpdate[index] = newData;\r\n        //         setData([...dataUpdate]);\r\n        //           axios.post(`${host}/teacher/edit`, newData)\r\n        //           .then(res => {\r\n        //             console.log(res.data);\r\n        //           })    \r\n        //         resolve();\r\n        //       }, 1000)\r\n        //     }),\r\n        //   onRowDelete: oldData =>\r\n        //     new Promise((resolve, reject) => {\r\n        //       setTimeout(() => {\r\n        //         const dataDelete = [...data];\r\n        //         const index = oldData.tableData.id;\r\n        //         dataDelete.splice(index, 1);\r\n        //         setData([...dataDelete]);\r\n        //           const id = oldData.id\r\n        //           axios.post(`${host}/teacher/delete`, {id: id})\r\n        //           .then(res => {\r\n        //               console.log(res.data);\r\n        //           })    \r\n        //         resolve()\r\n        //       }, 1000)\r\n        //     }),\r\n        // }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;","C:\\EduProject\\webadmin\\src\\components\\AbsenceTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\StationTable\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\Chart\\Chart.jsx",["193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"import React from 'react';\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport './style.css'\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst Chart = props => {\r\n    const [permission, setPermission] = React.useState(['Giáo viên chủ nhiệm', 'Giáo viên đưa đón'])\r\n    const [data, setData] = React.useState([])\r\n    const [classData, setClassData] = React.useState([])\r\n    const [studentData, setStudentData] = React.useState([])\r\n    const [noAttData, setNoAttData] = React.useState([])\r\n    const [absenceData, setAbsenceData] = React.useState([])\r\n    const [teacherData, setTeacherData] = React.useState([])\r\n\r\n    const getClassData = async () => {\r\n        setClassData([])\r\n        const isClasses = await axios.get(`${host}/class`)\r\n        const data = await isClasses.data.map(item => {\r\n            return 'Lớp: ' + item.ClassCode\r\n        })\r\n        setClassData(data)\r\n        setData(isClasses.data);\r\n        getStudentData(isClasses.data)\r\n        getNoAttData(isClasses.data, 99)\r\n        getAbsence(isClasses.data, 99)\r\n    }\r\n    \r\n    const getStudentData = async (data) => {\r\n        setStudentData([])\r\n        const isStudent = await axios.get(`${host}/student`)\r\n        data.map(async (item) => {\r\n            const getData = await isStudent.data.filter(item2 => {\r\n                return item._id === item2.classCode\r\n            })\r\n            setStudentData(previous => [\r\n                ...previous,\r\n                getData.length\r\n            ])\r\n        })\r\n    }\r\n\r\n    const getTeacherData = async () => {\r\n        setTeacherData([])\r\n        const arr = ['teacher', 'supervisor']\r\n        const isTeacher = await axios.get(`${host}/teacher`)\r\n        arr.map(item => {\r\n            const result = isTeacher.data.filter(item2 => {\r\n                return item === item2.permission\r\n            })\r\n            setTeacherData(previous => [\r\n                ...previous,\r\n                result.length\r\n            ])\r\n        })\r\n    }\r\n    \r\n    const getNoAttData = async (data, type) => {\r\n        setNoAttData([])\r\n        if(type == 99) {\r\n            const isNoAtt = await axios.get(`${host}/noattendance/getData`)\r\n            data.map(async (item) => {\r\n                const data = [];\r\n                await isNoAtt.data.map(async (item2) => {\r\n                    const result = await item2.studentList.filter((item3) => {\r\n                        return item3.data.classCode === item._id\r\n                    })\r\n                    data.push(result.length)\r\n                })\r\n                const qty = data.reduce((accumulator, currentValue) => accumulator + currentValue )\r\n                setNoAttData(previous => [\r\n                    ...previous,\r\n                    qty\r\n                ])\r\n            })\r\n        } \r\n        \r\n        else if(type == 1) {\r\n            const d = new Date();\r\n            const isNoAtt = await axios.get(`${host}/noattendance/getData`)\r\n            data.map(async (item) => {\r\n                const data = [];\r\n                await isNoAtt.data.map(async (item2) => {\r\n                    if((new Date(item2.date)).getDate()+'-'+(new Date(item2.date)).getMonth() === d.getDate()+'-'+d.getMonth()) {\r\n                        const result = await item2.studentList.filter((item3) => {\r\n                            return item3.data.classCode === item._id\r\n                        })\r\n                        data.push(result.length)\r\n                    }\r\n                })\r\n                var qty = 0\r\n                if(data.length !== 0) {\r\n                    qty = data.reduce((accumulator, currentValue) => accumulator + currentValue )\r\n                }\r\n                setNoAttData(previous => [\r\n                    ...previous,\r\n                    qty\r\n                ])\r\n            })\r\n        } \r\n        \r\n        else {\r\n            var d = new Date(new Date().setDate(new Date().getDate()-type));\r\n            var day = d.getDay(),\r\n                diff = d.getDate() - day + (day == 0 ? -6:1); // adjust when day is sunday\r\n            const dateArr = [];\r\n            for(let i=0 ; i<7 ; i++) {\r\n                const date = new Date(d.setDate(diff));\r\n                const newDate = new Date(date.setDate(date.getDate() + i));\r\n                dateArr.push(newDate.getDate() + '-' + (newDate.getMonth()));\r\n            }\r\n            const isNoAtt = await axios.get(`${host}/noattendance/getData`)\r\n            data.map(async (item) => {\r\n                const data = [];\r\n                await isNoAtt.data.map(async (item2) => {\r\n                    if(dateArr.indexOf((new Date(item2.date)).getDate()+'-'+(new Date(item2.date)).getMonth()) !== -1) {\r\n                        const result = await item2.studentList.filter((item3) => {\r\n                            return item3.data.classCode === item._id\r\n                        })\r\n                        data.push(result.length)\r\n                    }\r\n                })\r\n                var qty = 0\r\n                if(data.length !== 0) {\r\n                    qty = data.reduce((accumulator, currentValue) => accumulator + currentValue )\r\n                }\r\n                setNoAttData(previous => [\r\n                    ...previous,\r\n                    qty\r\n                ])\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const getAbsence = async (data, type) => {\r\n        setAbsenceData([])\r\n        if(type == 99) {\r\n            const isAbsence = await axios.get(`${host}/absence/getData`)\r\n            data.map(async (item) => {\r\n                const data = await isAbsence.data.filter((item2) => {\r\n                    return item._id === item2.classCode\r\n                })\r\n                var qty = 0;\r\n                data.map(item3 => {\r\n                    qty += item3.dates.length\r\n                })\r\n                setAbsenceData(previous => [\r\n                    ...previous,\r\n                    qty\r\n                ])\r\n            })\r\n        } \r\n        \r\n        else if(type == 1){\r\n            const d = new Date();\r\n            const isAbsence = await axios.get(`${host}/absence/getData`)\r\n            data.map(async (item) => {\r\n                const data = await isAbsence.data.filter((item2) => {\r\n                    return item._id === item2.classCode\r\n                })\r\n                var qty = 0;\r\n                data.map(item3 => {\r\n                    item3.dates.map(item4 => {\r\n                        if((new Date(item4.date)).getDate()+'-'+(new Date(item4.date)).getMonth() === d.getDate()+'-'+d.getMonth()) {\r\n                            qty += 1\r\n                        }\r\n                    })\r\n                })\r\n                setAbsenceData(previous => [\r\n                    ...previous,\r\n                    qty\r\n                ])\r\n            })\r\n        }\r\n        else {\r\n            var d = new Date(new Date().setDate(new Date().getDate()-type));\r\n            var day = d.getDay(),\r\n                diff = d.getDate() - day + (day == 0 ? -6:1); // adjust when day is sunday\r\n            const dateArr = [];\r\n            for(let i=0 ; i<7 ; i++) {\r\n                const date = new Date(d.setDate(diff));\r\n                const newDate = new Date(date.setDate(date.getDate() + i));\r\n                dateArr.push(newDate.getDate() + '-' + (newDate.getMonth()));\r\n            }\r\n            const isAbsence = await axios.get(`${host}/absence/getData`)\r\n            data.map(async (item) => {\r\n                const data = await isAbsence.data.filter((item2) => {\r\n                    return item._id === item2.classCode\r\n                })\r\n                var qty = 0;\r\n                data.map(item3 => {\r\n                    item3.dates.map(item4 => {\r\n                        if(dateArr.indexOf((new Date(item4.date)).getDate()+'-'+(new Date(item4.date)).getMonth()) !== -1) {\r\n                            qty += 1\r\n                        }\r\n                    })\r\n                })\r\n                setAbsenceData(previous => [\r\n                    ...previous,\r\n                    qty\r\n                ])\r\n            })\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getClassData()\r\n        getTeacherData()\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            <div className=\"chart-area\">\r\n                <div className=\"each-chart-area\">\r\n                    <Doughnut\r\n                        data={{\r\n                        labels: classData,\r\n                        datasets: [\r\n                            {\r\n                            label: \"Population (millions)\",\r\n                            backgroundColor: [\r\n                                \"#3e95cd\",\r\n                                \"#8e5ea2\",\r\n                                \"#3cba9f\",\r\n                                \"#e8c3b9\",\r\n                                \"#c45850\"\r\n                            ],\r\n                            data: studentData\r\n                            }\r\n                        ]\r\n                        }}\r\n                        option={{\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Predicted world population (millions) in 2050\"\r\n                        }\r\n                        }}\r\n                    />\r\n\r\n\r\n\r\n                    <Doughnut\r\n                        data={{\r\n                        labels: permission,\r\n                        datasets: [\r\n                            {\r\n                            label: \"Population (millions)\",\r\n                            backgroundColor: [\r\n                                \"#3e95cd\",\r\n                                \"#8e5ea2\",\r\n                                \"#3cba9f\",\r\n                                \"#e8c3b9\",\r\n                                \"#c45850\"\r\n                            ],\r\n                            data: teacherData\r\n                            }\r\n                        ]\r\n                        }}\r\n                        option={{\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Predicted world population (millions) in 2050\"\r\n                        }\r\n                        }}\r\n                    />\r\n\r\n\r\n\r\n                    <Doughnut\r\n                        data={{\r\n                        labels: classData,\r\n                        datasets: [\r\n                            {\r\n                            label: \"Population (millions)\",\r\n                            backgroundColor: [\r\n                                \"#3e95cd\",\r\n                                \"#8e5ea2\",\r\n                                \"#3cba9f\",\r\n                                \"#e8c3b9\",\r\n                                \"#c45850\"\r\n                            ],\r\n                            data: noAttData\r\n                            }\r\n                        ]\r\n                        }}\r\n                        option={{\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Predicted world population (millions) in 2050\"\r\n                        }\r\n                        }}\r\n                    />\r\n\r\n                    <Doughnut\r\n                        data={{\r\n                        labels: classData,\r\n                        datasets: [\r\n                            {\r\n                            label: \"Population (millions)\",\r\n                            backgroundColor: [\r\n                                \"#3e95cd\",\r\n                                \"#8e5ea2\",\r\n                                \"#3cba9f\",\r\n                                \"#e8c3b9\",\r\n                                \"#c45850\"\r\n                            ],\r\n                            data: absenceData\r\n                            }\r\n                        ]\r\n                        }}\r\n                        option={{\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Predicted world population (millions) in 2050\"\r\n                        }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"selector-chart\">\r\n                <select className=\"selector\"\r\n                    onChange={(e) => {\r\n                        getNoAttData(data, e.target.value)\r\n                        getAbsence(data, e.target.value)\r\n                    }}\r\n                >\r\n                    <option value={99}>Tất cả</option>\r\n                    <option value={1}>Hôm nay</option>\r\n                    <option value={0}>Tuần này</option>\r\n                    <option value={7}>Tuần trước</option>\r\n                    <option value={14}>2 Tuần trước</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","C:\\EduProject\\webadmin\\src\\components\\Statistics\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\Statistics\\Statistics.jsx",["207","208","209","210"],"import React from 'react';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport './style.css'\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst Statistics = props => {\r\n\r\n    const [isDate, setDate] = React.useState([])\r\n    const [dataNoAtt, setDataNoAtt] = React.useState([]);\r\n    const [dataAbsence, setDataAbsence] = React.useState([])\r\n\r\n    var weekday = new Array(7);\r\n    weekday[0] = \"Chủ nhật\";\r\n    weekday[1] = \"Thứ 2\";\r\n    weekday[2] = \"Thứ 3\";\r\n    weekday[3] = \"Thứ 4\";\r\n    weekday[4] = \"Thứ 5\";\r\n    weekday[5] = \"Thứ 6\";\r\n    weekday[6] = \"Thứ 7\";\r\n\r\n    React.useEffect(() => {\r\n        getMonday(new Date(), 0)\r\n    },[])\r\n\r\n    const getMonday = (d, index) => {\r\n        d = new Date(d.setDate(d.getDate()-index));\r\n        setDataNoAtt([])\r\n        setDataAbsence([])\r\n        var day = d.getDay(),\r\n            diff = d.getDate() - day + (day == 0 ? -6:1); // adjust when day is sunday\r\n        const dateArr = [];\r\n        for(let i=0 ; i<7 ; i++) {\r\n            const date = new Date(d.setDate(diff));\r\n            const newDate = new Date(date.setDate(date.getDate() + i));\r\n            dateArr.push(weekday[newDate.getDay()] + ' ' + newDate.getDate() + '-' + (newDate.getMonth()+1));\r\n            getNoattendace(date, 0);\r\n            getAbsence(date, 0)\r\n        }\r\n        setDate(dateArr);\r\n    }\r\n\r\n    const getNoattendace = async (date, index) => {\r\n        const d = new Date(date)\r\n\r\n        const NoAttdata = await axios.get(`${host}/noattendance/getData`)\r\n        const filterNoAtt = await NoAttdata.data.filter(item => {\r\n            return new Date(item.date).getDate()+'-'+new Date(item.date).getMonth() === d.getDate()+'-'+d.getMonth()\r\n        })\r\n        var qty = 0;\r\n        filterNoAtt.map( item => {\r\n            qty += item.studentList.length\r\n        });\r\n        setDataNoAtt(previous => [\r\n            ...previous,\r\n            qty\r\n        ])\r\n    }\r\n\r\n    const getAbsence = async (date, index) => {\r\n        const d = new Date(date)\r\n        var qtyAbsence = 0;\r\n        const isAbsence = await axios.get(`${host}/absence/getData`)\r\n        isAbsence.data.map(item => {\r\n            const dt = item.dates.filter(item2 => {\r\n                return (new Date(item2.date)).getDate() + '-' + (new Date(item2.date)).getMonth() === d.getDate()+'-'+d.getMonth()\r\n            })\r\n            qtyAbsence += dt.length\r\n        })\r\n        setDataAbsence(previous => [\r\n            ...previous,\r\n            qtyAbsence\r\n        ])\r\n    }   \r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"selector_space\">\r\n                <div className=\"selector\">\r\n                    <select className=\"selector\"\r\n                        onChange={(e) => getMonday(new Date(), e.target.value)}\r\n                    >\r\n                        <option value={0}>Tuần này</option>\r\n                        <option value={7}>Tuần trước</option>\r\n                        <option value={14}>2 Tuần trước</option>\r\n                    </select>\r\n                </div>\r\n            </div>  \r\n            <div className=\"chart-statistics-area\">\r\n                <div className=\"chart-statistics\">\r\n                    <Bar\r\n                        data={{\r\n                        labels: isDate,\r\n                        datasets: [\r\n                            {\r\n                            label: \"Tổng số học sinh vắng không phép trong tuần\",\r\n                            backgroundColor: [\r\n                                \"#3e95cd\",\r\n                                \"#8e5ea2\",\r\n                                \"#3cba9f\",\r\n                                \"#e8c3b9\",\r\n                                \"#c45850\"\r\n                            ],\r\n                            data: dataNoAtt\r\n                            }\r\n                        ]\r\n                        }}\r\n                        options={{\r\n                        legend: { display: false },\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Tổng số học sinh vắng trong tuần\"\r\n                        }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"chart-statistics\">\r\n                    <Bar\r\n                        data={{\r\n                        labels: isDate,\r\n                        datasets: [\r\n                            {\r\n                            label: \"Tổng số học sinh vắng có phép trong tuần\",\r\n                            backgroundColor: [\r\n                                \"#3e95cd\",\r\n                                \"#8e5ea2\",\r\n                                \"#3cba9f\",\r\n                                \"#e8c3b9\",\r\n                                \"#c45850\"\r\n                            ],\r\n                            data: dataAbsence\r\n                            }\r\n                        ]\r\n                        }}\r\n                        options={{\r\n                        legend: { display: false },\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Tổng số học sinh vắng trong tuần\"\r\n                        }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;","C:\\EduProject\\webadmin\\src\\components\\Chart\\index.jsx",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":17},{"ruleId":"211","replacedBy":"219"},{"ruleId":"213","replacedBy":"220"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":17},{"ruleId":"215","severity":1,"message":"221","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":14},{"ruleId":"215","severity":1,"message":"222","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":18},{"ruleId":"215","severity":1,"message":"223","line":16,"column":8,"nodeType":"217","messageId":"218","endLine":16,"endColumn":16},{"ruleId":"215","severity":1,"message":"224","line":4,"column":22,"nodeType":"217","messageId":"218","endLine":4,"endColumn":28},{"ruleId":"215","severity":1,"message":"225","line":5,"column":5,"nodeType":"217","messageId":"218","endLine":5,"endColumn":11},{"ruleId":"215","severity":1,"message":"226","line":6,"column":5,"nodeType":"217","messageId":"218","endLine":6,"endColumn":10},{"ruleId":"227","severity":1,"message":"228","line":27,"column":70,"nodeType":"229","messageId":"230","endLine":27,"endColumn":72},{"ruleId":"231","severity":1,"message":"232","line":29,"column":22,"nodeType":"233","messageId":"234","endLine":29,"endColumn":24},{"ruleId":"227","severity":1,"message":"235","line":34,"column":33,"nodeType":"229","messageId":"236","endLine":34,"endColumn":35},{"ruleId":"227","severity":1,"message":"235","line":44,"column":36,"nodeType":"229","messageId":"236","endLine":44,"endColumn":38},{"ruleId":"227","severity":1,"message":"228","line":45,"column":52,"nodeType":"229","messageId":"230","endLine":45,"endColumn":54},{"ruleId":"211","replacedBy":"237"},{"ruleId":"213","replacedBy":"238"},{"ruleId":"211","replacedBy":"239"},{"ruleId":"213","replacedBy":"240"},{"ruleId":"215","severity":1,"message":"241","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":7},{"ruleId":"215","severity":1,"message":"242","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":11},{"ruleId":"215","severity":1,"message":"243","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"235","line":66,"column":30,"nodeType":"229","messageId":"236","endLine":66,"endColumn":32},{"ruleId":"244","severity":1,"message":"245","line":146,"column":15,"nodeType":"229","endLine":149,"endColumn":6},{"ruleId":"215","severity":1,"message":"243","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"235","line":56,"column":27,"nodeType":"229","messageId":"236","endLine":56,"endColumn":29},{"ruleId":"244","severity":1,"message":"245","line":64,"column":16,"nodeType":"229","endLine":67,"endColumn":6},{"ruleId":"211","replacedBy":"246"},{"ruleId":"213","replacedBy":"247"},{"ruleId":"215","severity":1,"message":"248","line":49,"column":21,"nodeType":"217","messageId":"218","endLine":49,"endColumn":31},{"ruleId":"215","severity":1,"message":"249","line":67,"column":12,"nodeType":"217","messageId":"218","endLine":67,"endColumn":21},{"ruleId":"215","severity":1,"message":"250","line":67,"column":23,"nodeType":"217","messageId":"218","endLine":67,"endColumn":35},{"ruleId":"244","severity":1,"message":"245","line":69,"column":15,"nodeType":"229","endLine":74,"endColumn":6},{"ruleId":"227","severity":1,"message":"235","line":80,"column":26,"nodeType":"229","messageId":"236","endLine":80,"endColumn":28},{"ruleId":"215","severity":1,"message":"251","line":116,"column":23,"nodeType":"217","messageId":"218","endLine":116,"endColumn":28},{"ruleId":"215","severity":1,"message":"251","line":145,"column":23,"nodeType":"217","messageId":"218","endLine":145,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":160,"column":23,"nodeType":"217","messageId":"254","endLine":160,"endColumn":30},{"ruleId":"244","severity":1,"message":"245","line":74,"column":16,"nodeType":"229","endLine":77,"endColumn":6},{"ruleId":"215","severity":1,"message":"243","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":60,"column":43,"nodeType":"233","messageId":"234","endLine":60,"endColumn":45},{"ruleId":"231","severity":1,"message":"232","line":91,"column":20,"nodeType":"233","messageId":"234","endLine":91,"endColumn":22},{"ruleId":"215","severity":1,"message":"243","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":55,"column":36,"nodeType":"233","messageId":"234","endLine":55,"endColumn":38},{"ruleId":"227","severity":1,"message":"235","line":59,"column":44,"nodeType":"229","messageId":"236","endLine":59,"endColumn":46},{"ruleId":"231","severity":1,"message":"232","line":76,"column":32,"nodeType":"233","messageId":"234","endLine":76,"endColumn":34},{"ruleId":"211","replacedBy":"255"},{"ruleId":"213","replacedBy":"256"},{"ruleId":"215","severity":1,"message":"243","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"235","line":54,"column":33,"nodeType":"229","messageId":"236","endLine":54,"endColumn":35},{"ruleId":"231","severity":1,"message":"232","line":59,"column":39,"nodeType":"233","messageId":"234","endLine":59,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":80,"column":20,"nodeType":"233","messageId":"234","endLine":80,"endColumn":22},{"ruleId":"215","severity":1,"message":"257","line":8,"column":24,"nodeType":"217","messageId":"218","endLine":8,"endColumn":37},{"ruleId":"227","severity":1,"message":"235","line":47,"column":22,"nodeType":"229","messageId":"236","endLine":47,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":60,"column":17,"nodeType":"233","messageId":"234","endLine":60,"endColumn":19},{"ruleId":"231","severity":1,"message":"232","line":78,"column":22,"nodeType":"233","messageId":"234","endLine":78,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":105,"column":49,"nodeType":"233","messageId":"234","endLine":105,"endColumn":51},{"ruleId":"231","severity":1,"message":"232","line":138,"column":17,"nodeType":"233","messageId":"234","endLine":138,"endColumn":19},{"ruleId":"227","severity":1,"message":"235","line":145,"column":32,"nodeType":"229","messageId":"236","endLine":145,"endColumn":34},{"ruleId":"231","severity":1,"message":"232","line":155,"column":22,"nodeType":"233","messageId":"234","endLine":155,"endColumn":24},{"ruleId":"227","severity":1,"message":"235","line":163,"column":32,"nodeType":"229","messageId":"236","endLine":163,"endColumn":34},{"ruleId":"227","severity":1,"message":"235","line":164,"column":43,"nodeType":"229","messageId":"236","endLine":164,"endColumn":45},{"ruleId":"231","severity":1,"message":"232","line":179,"column":49,"nodeType":"233","messageId":"234","endLine":179,"endColumn":51},{"ruleId":"227","severity":1,"message":"235","line":192,"column":32,"nodeType":"229","messageId":"236","endLine":192,"endColumn":34},{"ruleId":"227","severity":1,"message":"235","line":193,"column":43,"nodeType":"229","messageId":"236","endLine":193,"endColumn":45},{"ruleId":"244","severity":1,"message":"258","line":210,"column":7,"nodeType":"259","endLine":210,"endColumn":9,"suggestions":"260"},{"ruleId":"244","severity":1,"message":"261","line":24,"column":7,"nodeType":"259","endLine":24,"endColumn":9,"suggestions":"262"},{"ruleId":"231","severity":1,"message":"232","line":31,"column":45,"nodeType":"233","messageId":"234","endLine":31,"endColumn":47},{"ruleId":"227","severity":1,"message":"235","line":51,"column":31,"nodeType":"229","messageId":"236","endLine":51,"endColumn":33},{"ruleId":"227","severity":1,"message":"235","line":64,"column":33,"nodeType":"229","messageId":"236","endLine":64,"endColumn":35},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["263"],["264"],"'AppBar' is defined but never used.","'IconButton' is defined but never used.","'MailIcon' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a return value from arrow function.","expectedInside",["263"],["264"],["263"],["264"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["263"],["264"],"'setColumns' is assigned a value but never used.","'dataClass' is assigned a value but never used.","'setDataClass' is assigned a value but never used.","'index' is assigned a value but never used.","no-redeclare","'parents' is already defined.","redeclared",["263"],["264"],"'setPermission' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getClassData'. Either include it or remove the dependency array.","ArrayExpression",["265"],"React Hook React.useEffect has a missing dependency: 'getMonday'. Either include it or remove the dependency array.",["266"],"no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [getClassData]",{"range":"271","text":"272"},"Update the dependencies array to be: [getMonday]",{"range":"273","text":"274"},[8204,8206],"[getClassData]",[653,655],"[getMonday]"]