[{"C:\\EduProject\\webadmin\\src\\components\\UserTable\\index.jsx":"1","C:\\EduProject\\webadmin\\src\\index.js":"2","C:\\EduProject\\webadmin\\src\\components\\Login\\index.jsx":"3","C:\\EduProject\\webadmin\\src\\components\\NotFound\\index.jsx":"4","C:\\EduProject\\webadmin\\src\\pages\\Admin\\index.jsx":"5","C:\\EduProject\\webadmin\\src\\components\\Home\\index.jsx":"6","C:\\EduProject\\webadmin\\src\\components\\ClassTable\\index.jsx":"7","C:\\EduProject\\webadmin\\src\\components\\TeacherTable\\index.jsx":"8","C:\\EduProject\\webadmin\\src\\components\\StudentTable\\index.jsx":"9","C:\\EduProject\\webadmin\\src\\host.js":"10","C:\\EduProject\\webadmin\\src\\App.js":"11","C:\\EduProject\\webadmin\\src\\reportWebVitals.js":"12","C:\\EduProject\\webadmin\\src\\components\\test.jsx":"13"},{"size":7822,"mtime":1615182491718,"results":"14","hashOfConfig":"15"},{"size":547,"mtime":1612156468185,"results":"16","hashOfConfig":"15"},{"size":1648,"mtime":1612158317379,"results":"17","hashOfConfig":"15"},{"size":233,"mtime":1611809551275,"results":"18","hashOfConfig":"15"},{"size":5924,"mtime":1613665383234,"results":"19","hashOfConfig":"15"},{"size":178,"mtime":1612026291499,"results":"20","hashOfConfig":"15"},{"size":4724,"mtime":1615022259998,"results":"21","hashOfConfig":"15"},{"size":6578,"mtime":1615023298909,"results":"22","hashOfConfig":"15"},{"size":8801,"mtime":1615183835451,"results":"23","hashOfConfig":"15"},{"size":62,"mtime":1612277462373,"results":"24","hashOfConfig":"15"},{"size":762,"mtime":1612026164960,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":1611544040223,"results":"26","hashOfConfig":"15"},{"size":1828,"mtime":1613890312373,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"187e2d1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},"C:\\EduProject\\webadmin\\src\\components\\UserTable\\index.jsx",["67","68","69","70","71","72","73","74"],"C:\\EduProject\\webadmin\\src\\index.js",[],["75","76"],"C:\\EduProject\\webadmin\\src\\components\\Login\\index.jsx",[],["77","78"],"C:\\EduProject\\webadmin\\src\\components\\NotFound\\index.jsx",["79"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NotFound = props => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h1>NOT FOUND</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;",["80","81"],"C:\\EduProject\\webadmin\\src\\pages\\Admin\\index.jsx",["82","83","84"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    // Link,\r\n    // Redirect\r\n    // useHistory\r\n  } from \"react-router-dom\";\r\n\r\nimport HomeScreen from '../../components/Home'\r\nimport NotFoundScreen from '../../components/NotFound'\r\nimport UserScreen from '../../components/UserTable'\r\nimport ClassScreen from '../../components/ClassTable'\r\nimport TeacherScreen from '../../components/TeacherTable'\r\nimport StudentScreen from '../../components/StudentTable'\r\nimport test from '../../components/test'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Home(props) {\r\n  // const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const navigation = (url) => {\r\n    window.location.href = `/home/${url}`\r\n  }\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <ListItem button key='Classes' onClick={() => navigation(\"classes\")}>\r\n          <ListItemIcon><MeetingRoomIcon /></ListItemIcon>\r\n          <ListItemText primary='Lớp học'/>\r\n        </ListItem>\r\n        <ListItem button key='Teachers' onClick={() => navigation(\"teachers\")}>\r\n          <ListItemIcon><AssignmentIndIcon /></ListItemIcon>\r\n          <ListItemText primary='Giáo viên'/>\r\n        </ListItem>\r\n        <ListItem button key='User' onClick={() => navigation(\"users\")}>\r\n          <ListItemIcon><AccountCircleIcon /></ListItemIcon>\r\n          <ListItemText primary='Phụ huynh'/>\r\n        </ListItem>\r\n        <ListItem button key='Student' onClick={() => navigation(\"students\")}>\r\n          <ListItemIcon><FaceIcon /></ListItemIcon>\r\n          <ListItemText primary='Học sinh'/>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  // const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            // container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        {/* <div className={classes.toolbar} /> */}\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/home\" component={HomeScreen} />\r\n                <Route path=\"/home/users\" component={UserScreen} />\r\n                <Route path=\"/home/classes\" component={ClassScreen} />\r\n                <Route path=\"/home/teachers\" component={TeacherScreen} />\r\n                <Route path=\"/home/students\" component={StudentScreen} />\r\n                <Route path=\"/home/name=:name/room=:room\" component={test} />\r\n                <Route component={NotFoundScreen} />\r\n            </Switch>\r\n        </Router>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\EduProject\\webadmin\\src\\components\\Home\\index.jsx",[],"C:\\EduProject\\webadmin\\src\\components\\ClassTable\\index.jsx",["85"],"import React from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState, useEffect } = React;\r\n    const [data, setData] = useState([]);\r\n\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    const getData = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      \r\n      setData(isClasses.data)\r\n    }\r\n\r\n    const getDataTeacher = async () => {\r\n      setColumns([\r\n        { title: 'Lớp', field: 'ClassCode' },\r\n        { title: 'Phòng', field: 'Room' },\r\n      ])\r\n    }\r\n   \r\n  \r\n    useEffect( async () => {\r\n      await getData();\r\n      await getDataTeacher(); \r\n    }, [])  \r\n    \r\n   \r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Classes Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                  axios.post(`${host}/class/create`, newData)\r\n                  .then((resCreate) => {\r\n                    console.log(resCreate.data);\r\n                  })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                axios.post(`${host}/class/edit`, newData)\r\n                .then((resCreate) => {\r\n                  console.log(resCreate.data);\r\n                })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                    axios.post(`${host}/class/delete`, {id: id})\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                    })    \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;",["86","87"],"C:\\EduProject\\webadmin\\src\\components\\TeacherTable\\index.jsx",["88","89"],"import React, { useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState } = React;\r\n  \r\n    const [columns, setColumns] = useState([]);\r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    const getData = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      await axios.get(`${host}/teacher`)\r\n      .then(res => {\r\n          let DATA = [];\r\n          res.data.map(dt => {\r\n            let classIndex = -1;\r\n            for(let i in isClasses.data) {\r\n              if(dt.ClassCode === isClasses.data[i]._id) {\r\n                classIndex = i;\r\n              }\r\n            }\r\n            const infoData = {\r\n                id: dt._id,\r\n                userName: dt.userName,\r\n                password: '********',\r\n                name: dt.FullName,\r\n                email: dt.Email,\r\n                numberPhone: dt.NumberPhone,\r\n                Gender: dt.Gender,\r\n                birthDay: dt.BirthDay,\r\n                identification: dt.Identification,\r\n                hometown: dt.HomeTown,\r\n                worked: dt.Worked,\r\n                permission: dt.permission,\r\n                classCode: classIndex\r\n            }\r\n              DATA.push(infoData)\r\n          })\r\n          // console.log(DATA);\r\n          setData(DATA);\r\n      })\r\n    }\r\n\r\n    const getColumn = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      setColumns([\r\n        { title: 'Tên Đăng Nhập', field: 'userName' },\r\n        { title: 'Mật khẩu', field: 'password' },\r\n        { title: 'Tên', field: 'name' },\r\n        { title: 'Email', field: 'email' },\r\n        { title: 'SĐT', field: 'numberPhone'},\r\n        { title: 'Giới tính', field: 'Gender',\r\n          lookup: {\r\n            Male: 'Nam',\r\n            Female: 'Nữ'\r\n          }\r\n        },\r\n        { title: 'Sinh ngày', field: 'birthDay' },\r\n        { title: 'CMND', field: 'identification' },\r\n        { title: 'Quê Quán', field: 'hometown' },\r\n        { title: 'Năm Nhận Việc', field: 'worked' },\r\n        { title: 'Chức vụ', field: 'permission',\r\n          lookup: {\r\n            teacher: 'Giáo viên',\r\n            supervisor: 'Người đưa đón'\r\n          }\r\n        },\r\n        { title: 'Lớp', field: 'classCode',\r\n          lookup: isClasses.data.map(dt => (\r\n            dt.ClassCode\r\n        ))\r\n        }\r\n      ])\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();   \r\n        getColumn(); \r\n    }, [])\r\n\r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Teachers Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                    axios.post(`${host}/teacher/create`, newData)\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                    })    \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                  axios.post(`${host}/teacher/edit`, newData)\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                  })    \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                  axios.post(`${host}/teacher/delete`, {id: id})\r\n                  .then(res => {\r\n                      console.log(res.data);\r\n                  })    \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;",["90","91"],"C:\\EduProject\\webadmin\\src\\components\\StudentTable\\index.jsx",["92","93","94"],"import React, { useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nimport host from '../../host'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  function ClassTable() {\r\n    const { useState } = React;\r\n  \r\n    const [columns, setColumns] = useState([\r\n        { title: 'Tên', field: 'name' },\r\n        { title: 'Sinh ngày', field: 'birthday' },\r\n        { title: 'Giới tính', field: 'gender' },\r\n        { title: 'Mã lớp', field: 'classCode' },\r\n        { title: 'GVCN', field: 'teacherCode'},\r\n        { title: 'Năm nhập học', field: 'joined'},\r\n    ]);\r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    const getData = async () => {\r\n      \r\n      const isStudents = await axios.get(`${host}/student`)\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      const isTeachers =  await axios.get(`${host}/teacher`)\r\n      const isParents =  await axios.get(`${host}/users`)\r\n\r\n      const dataArray = [];\r\n      isStudents.data.map(dt => {\r\n        let classIndex = -1;\r\n        let teacherIndex = -1;\r\n        let parentsIndex = -1;\r\n\r\n        for(let i in isClasses.data) {\r\n          if(isClasses.data[i]._id === dt.classCode) {\r\n            classIndex = i;\r\n          }\r\n        }\r\n\r\n        for(let i in isTeachers.data) {\r\n          if(isTeachers.data[i]._id === dt.teacherCode) {\r\n            teacherIndex = i;\r\n          }\r\n        }\r\n\r\n        for(let i in isParents.data) {\r\n          if(isParents.data[i]._id === dt.parentsCode) {\r\n            parentsIndex = i;\r\n          }\r\n        }\r\n\r\n        const infoData = {\r\n          id: dt._id,\r\n          name: dt.name,\r\n          birthday: dt.birthday,\r\n          gender: dt.gender,\r\n          classCode: Number(classIndex),\r\n          teacherCode: Number(teacherIndex),\r\n          parentsCode: Number(parentsIndex),\r\n          joined: dt.joined\r\n        }\r\n        dataArray.push(infoData)\r\n      })\r\n      setData(dataArray)\r\n    }\r\n\r\n    const setItinialColumns = async () => {\r\n      const isClasses = await axios.get(`${host}/class`)\r\n      const isTeachers =  await axios.get(`${host}/teacher`)\r\n      const isParents = await axios.get(`${host}/users`)\r\n\r\n      setColumns([\r\n        { title: 'Tên', field: 'name' },\r\n        { title: 'Sinh ngày', field: 'birthday' },\r\n        { title: 'Giới tính', field: 'gender', \r\n          lookup: {\r\n            Male: 'Nam',\r\n            Female: 'Nữ'\r\n          }\r\n        },\r\n        { title: 'Mã lớp', field: 'classCode', \r\n          lookup: isClasses.data.map((e, i) => (\r\n            e.ClassCode\r\n          ))\r\n        },\r\n        { title: 'GVCN', field: 'teacherCode',\r\n          lookup: isTeachers.data.map((e, i) => (\r\n            e.FullName\r\n          ))\r\n        },\r\n        {\r\n          title: 'Tên Phụ huynh', field: 'parentsCode',\r\n            lookup: isParents.data.map((e, i) => (\r\n              e.myFullName\r\n            ))\r\n        },\r\n        { title: 'Năm nhập học', field: 'joined',\r\n          lookup: {\r\n            2018: 2018,\r\n            2019: 2019,\r\n            2020: 2020,\r\n            2021: 2021,\r\n            2022: 2022,\r\n            2023: 2023\r\n          }\r\n        },\r\n      ])\r\n    }\r\n    useEffect(async () => {\r\n        await getData(); \r\n        setItinialColumns();   \r\n    }, [])\r\n\r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Students Management\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(async() => {\r\n              setData([...data, newData]);\r\n                // console.log(newData); \r\n                const isClasses = await axios.get(`${host}/class`)\r\n                const isTeachers =  await axios.get(`${host}/teacher`)  \r\n                const isParents =  await axios.get(`${host}/users`) \r\n                const student = {\r\n                    name: newData.name,\r\n                    birthday: newData.birthday,\r\n                    gender: newData.gender,\r\n                    classCode: isClasses.data[Number(newData.classCode)]._id,\r\n                    teacherCode: isTeachers.data[Number(newData.teacherCode)]._id,\r\n                    parentsCode : isParents.data[Number(newData.parentsCode)]._id,\r\n                    joined: newData.joined,\r\n                  }\r\n                  // console.log(student);\r\n                  axios.post(`${host}/student/create`, student)\r\n                    .then((res) => {\r\n                       console.log('successly Student Addition!');\r\n                  })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(async() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                const isClasses = await axios.get(`${host}/class`)\r\n                const isTeachers =  await axios.get(`${host}/teacher`)  \r\n                const isParents =  await axios.get(`${host}/users`) \r\n                const student = {\r\n                    id: newData.id,\r\n                    name: newData.name,\r\n                    birthday: newData.birthday,\r\n                    gender: newData.gender,\r\n                    classCode: isClasses.data[Number(newData.classCode)]._id,\r\n                    teacherCode: isTeachers.data[Number(newData.teacherCode)]._id,\r\n                    parentsCode : isParents.data[Number(newData.parentsCode)]._id,\r\n                    joined: newData.joined,\r\n                  }\r\n                axios.post(`${host}/student/edit`, student)\r\n                  .then(resEdit => {\r\n                    console.log(resEdit.data);\r\n                })\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                  const id = oldData.id\r\n                  axios.post(`${host}/student/delete`, {id: id})\r\n                  .then(res => {\r\n                    console.log(res.data);\r\n                  })     \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  \r\nexport default ClassTable;","C:\\EduProject\\webadmin\\src\\host.js",[],"C:\\EduProject\\webadmin\\src\\App.js",["95","96"],"import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport LoginScreen from './components/Login';\nimport NotFoundScreen from './components/NotFound'\nimport HomeScreen from './pages/Admin'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Suspense fallback={<div>Loadding ...</div>}>\n        <Router>\n            <Switch>\n              {/* <Redirect exact from=\"/\" to=\"/photos\" /> */}\n              <Route exact path=\"/\" component={LoginScreen} />\n              <Route path=\"/home\" component={HomeScreen} />\n              <Route component={NotFoundScreen} />\n            </Switch>\n          </Router>\n       </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\EduProject\\webadmin\\src\\reportWebVitals.js",[],["97","98"],"C:\\EduProject\\webadmin\\src\\components\\test.jsx",["99","100","101"],"import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport host from '../host'\r\nimport axios from 'axios'\r\n\r\nlet socket;\r\n\r\nconst Test = (props) => {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        const { name, room } = props.match.params\r\n        socket = io(host);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room }, () => {\r\n          \r\n        });\r\n\r\n        axios.post(`${host}/chat/checkroom`, { room: room })\r\n\r\n        axios.get(`${host}/chat/showMessages/${room}`)\r\n        .then(res => {\r\n            setMessages(res.data[0].messages);\r\n        })\r\n\r\n        console.log('123');\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setMessages([...messages, message])\r\n        })\r\n    }, [messages]);\r\n\r\n    const sendMessage = (event) => {\r\n        // event.preventDefault()\r\n\r\n        if(message) {\r\n            socket.emit('sendMessage', message);\r\n            setMessage('');\r\n        }\r\n    }\r\n\r\n    // console.log(message, messages);\r\n    return (\r\n        <div>\r\n            <input \r\n                value={message}\r\n                onChange={(event) => setMessage(event.target.value)}\r\n                onKeyPress={(event) => event.key === 'Enter' && sendMessage()}\r\n            />\r\n            <ul>\r\n                {messages.map(data => (\r\n                    <li>user: {data.user}, text: {data.text} </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;",{"ruleId":"102","severity":1,"message":"103","line":49,"column":21,"nodeType":"104","messageId":"105","endLine":49,"endColumn":31},{"ruleId":"102","severity":1,"message":"106","line":67,"column":12,"nodeType":"104","messageId":"105","endLine":67,"endColumn":21},{"ruleId":"102","severity":1,"message":"107","line":67,"column":23,"nodeType":"104","messageId":"105","endLine":67,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":69,"column":15,"nodeType":"110","endLine":74,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":80,"column":26,"nodeType":"110","messageId":"113","endLine":80,"endColumn":28},{"ruleId":"102","severity":1,"message":"114","line":116,"column":23,"nodeType":"104","messageId":"105","endLine":116,"endColumn":28},{"ruleId":"102","severity":1,"message":"114","line":145,"column":23,"nodeType":"104","messageId":"105","endLine":145,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":160,"column":23,"nodeType":"104","messageId":"117","endLine":160,"endColumn":30},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"102","severity":1,"message":"124","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"118","replacedBy":"125"},{"ruleId":"120","replacedBy":"126"},{"ruleId":"102","severity":1,"message":"124","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"127","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},{"ruleId":"102","severity":1,"message":"128","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":64,"column":16,"nodeType":"110","endLine":67,"endColumn":6},{"ruleId":"118","replacedBy":"129"},{"ruleId":"120","replacedBy":"130"},{"ruleId":"102","severity":1,"message":"131","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":56,"column":27,"nodeType":"110","messageId":"113","endLine":56,"endColumn":29},{"ruleId":"118","replacedBy":"132"},{"ruleId":"120","replacedBy":"133"},{"ruleId":"102","severity":1,"message":"131","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":66,"column":30,"nodeType":"110","messageId":"113","endLine":66,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":146,"column":15,"nodeType":"110","endLine":149,"endColumn":6},{"ruleId":"102","severity":1,"message":"134","line":6,"column":3,"nodeType":"104","messageId":"105","endLine":6,"endColumn":7},{"ruleId":"102","severity":1,"message":"135","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":11},{"ruleId":"118","replacedBy":"136"},{"ruleId":"120","replacedBy":"137"},{"ruleId":"102","severity":1,"message":"138","line":10,"column":12,"nodeType":"104","messageId":"105","endLine":10,"endColumn":16},{"ruleId":"102","severity":1,"message":"139","line":11,"column":12,"nodeType":"104","messageId":"105","endLine":11,"endColumn":16},{"ruleId":"108","severity":1,"message":"140","line":39,"column":8,"nodeType":"141","endLine":39,"endColumn":10,"suggestions":"142"},"no-unused-vars","'setColumns' is assigned a value but never used.","Identifier","unusedVar","'dataClass' is assigned a value but never used.","'setDataClass' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'index' is assigned a value but never used.","no-redeclare","'parents' is already defined.","redeclared","no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],"'PropTypes' is defined but never used.",["143"],["144"],"'AppBar' is defined but never used.","'IconButton' is defined but never used.",["143"],["144"],"'useState' is defined but never used.",["143"],["144"],"'Link' is defined but never used.","'Redirect' is defined but never used.",["143"],["144"],"'name' is assigned a value but never used.","'room' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.","ArrayExpression",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [props.match.params]",{"range":"148","text":"149"},[966,968],"[props.match.params]"]